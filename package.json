{
  "name": "go-debugger-ai",
  "displayName": "Co Debugger AI",
  "description": "AI-powered multi-language debugging with symbolic execution and path-sensitivity analysis",
  "version": "2.0.2",
  "publisher": "NandamYashwanth",
  "author": {
    "name": "Yashwanth Nandam",
    "email": "yesnandam@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/yashwanthnandam/co-debugger.git"
  },
  "homepage": "https://github.com/yashwanthnandam/co-debugger#readme",
  "bugs": {
    "url": "https://github.com/yashwanthnandam/co-debugger/issues"
  },
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Debuggers",
    "Programming Languages",
    "Machine Learning",
    "Testing"
  ],
  "keywords": [
    "go",
    "python",
    "javascript",
    "typescript",
    "java",
    "cpp",
    "c++",
    "debugger",
    "ai",
    "debugging",
    "symbolic execution",
    "path sensitivity",
    "context analysis",
    "multi-language",
    "universal",
    "delve",
    "gdb",
    "lldb",
    "jdb",
    "llm",
    "chatgpt",
    "anthropic",
    "co-pilot",
    "assistant"
  ],
  "galleryBanner": {
    "color": "#00ADD8",
    "theme": "dark"
  },
  "icon": "assets/icon.png",
  "activationEvents": [
    "onDebugSessionType:go",
    "onDebugSessionType:python",
    "onDebugSessionType:debugpy",
    "onDebugSessionType:node",
    "onDebugSessionType:chrome",
    "onDebugSessionType:typescript",
    "onDebugSessionType:java",
    "onDebugSessionType:cppdbg",
    "onDebugSessionType:cppvsdbg",
    "onDebugSessionType:lldb",
    "onDebugSessionType:gdb",
    "onLanguage:go",
    "onLanguage:python",
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:java",
    "onLanguage:cpp",
    "onLanguage:c"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "contextSelector.openView",
        "title": "Open Context Analyzer",
        "category": "Co Debug",
        "icon": "$(graph-line)"
      },
      {
        "command": "contextSelector.refreshContext",
        "title": "Refresh Debug Context",
        "category": "Co Debug",
        "icon": "$(refresh)"
      },
      {
        "command": "contextSelector.exportContext",
        "title": "Export Debug Analysis",
        "category": "Co Debug",
        "icon": "$(export)"
      },
      {
        "command": "contextSelector.showExecutionGraph",
        "title": "Show Execution Path Graph",
        "category": "Co Debug"
      },
      {
        "command": "contextSelector.checkStopped",
        "title": "Check Debugger Status",
        "category": "Co Debug",
        "icon": "$(debug-alt)"
      },
      {
        "command": "coDebugger.configureAI",
        "title": "Configure AI Assistant",
        "category": "Co Debug",
        "icon": "$(settings-gear)"
      },
      {
        "command": "quickDebugAI.attachToCopilot",
        "title": "Attach to Copilot",
        "category": "Co Debug",
        "icon": "$(attach)"
      },
      {
        "command": "quickDebugAI.askAI",
        "title": "Ask AI",
        "category": "Co Debug",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "quickDebugAI.selectAll",
        "title": "Select All",
        "icon": "$(check-all)"
      },
      {
        "command": "quickDebugAI.selectNone",
        "title": "Select None",
        "icon": "$(close-all)"
      }
    ],
    "keybindings": [
      {
        "command": "contextSelector.openView",
        "key": "ctrl+shift+d ctrl+shift+a",
        "mac": "cmd+shift+d cmd+shift+a",
        "when": "debuggersAvailable"
      },
      {
        "command": "contextSelector.refreshContext",
        "key": "ctrl+shift+d r",
        "mac": "cmd+shift+d r",
        "when": "inDebugMode"
      },
      {
        "command": "coDebugger.configureAI",
        "key": "ctrl+shift+d ctrl+shift+c",
        "mac": "cmd+shift+d cmd+shift+c"
      },
      {
        "command": "contextSelector.showExecutionGraph",
        "key": "ctrl+shift+d ctrl+shift+g",
        "mac": "cmd+shift+d cmd+shift+g",
        "when": "inDebugMode"
      },
      {
        "command": "quickDebugAI.attachToCopilot",
        "key": "ctrl+shift+d ctrl+shift+q",
        "mac": "cmd+shift+d cmd+shift+q",
        "when": "inDebugMode"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "contextSelector.openView",
          "when": "debugType == go || debugType == python || debugType == node || debugType == chrome || debugType == typescript || debugType == java || debugType == cppdbg || debugType == lldb || resourceExtname == .go || resourceExtname == .py || resourceExtname == .js || resourceExtname == .ts || resourceExtname == .java || resourceExtname == .cpp || resourceExtname == .c"
        },
        {
          "command": "contextSelector.refreshContext",
          "when": "debugType == go || debugType == python || debugType == node || debugType == chrome || debugType == typescript || debugType == java || debugType == cppdbg || debugType == lldb"
        },
        {
          "command": "contextSelector.exportContext",
          "when": "debugType == go || debugType == python || debugType == node || debugType == chrome || debugType == typescript || debugType == java || debugType == cppdbg || debugType == lldb"
        },
        {
          "command": "coDebugger.configureAI",
          "when": "true"
        }
      ],
      "debug/toolbar": [
        {
          "command": "contextSelector.openView",
          "when": "debugType == go || debugType == python || debugType == node || debugType == chrome || debugType == typescript || debugType == java || debugType == cppdbg || debugType == lldb",
          "group": "navigation@1"
        },
        {
          "command": "contextSelector.refreshContext",
          "when": "debugType == go || debugType == python || debugType == node || debugType == chrome || debugType == typescript || debugType == java || debugType == cppdbg || debugType == lldb",
          "group": "navigation@2"
        }
      ],
      "debug/callstack/context": [
        {
          "command": "contextSelector.openView",
          "when": "debugType == go || debugType == python || debugType == node || debugType == chrome || debugType == typescript || debugType == java || debugType == cppdbg || debugType == lldb",
          "group": "co-debug@1"
        }
      ],
      "debug/variables/context": [
        {
          "command": "contextSelector.openView",
          "when": "debugType == go || debugType == python || debugType == node || debugType == chrome || debugType == typescript || debugType == java || debugType == cppdbg || debugType == lldb",
          "group": "co-debug@1"
        },
        {
          "command": "contextSelector.refreshContext",
          "when": "debugType == go || debugType == python || debugType == node || debugType == chrome || debugType == typescript || debugType == java || debugType == cppdbg || debugType == lldb",
          "group": "co-debug@2"
        }
      ],
      "editor/context": [
        {
          "command": "contextSelector.openView",
          "when": "inDebugMode && (resourceExtname == .go || resourceExtname == .py || resourceExtname == .js || resourceExtname == .ts || resourceExtname == .java || resourceExtname == .cpp || resourceExtname == .c)",
          "group": "co-debug@1"
        }
      ],
      "view/title": [
        {
          "command": "quickDebugAI.attachToCopilot",
          "when": "view == quickDebugAIView",
          "group": "navigation@1"
        },
        {
          "command": "quickDebugAI.askAI",
          "when": "view == quickDebugAIView",
          "group": "navigation@2"
        },
        {
          "command": "quickDebugAI.selectAll",
          "when": "view == quickDebugAIView",
          "group": "selection@1"
        },
        {
          "command": "quickDebugAI.selectNone",
          "when": "view == quickDebugAIView",
          "group": "selection@2"
        },
        {
          "command": "coDebugger.configureAI",
          "when": "view == quickDebugAIView",
          "group": "navigation@3"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "coDebugAnalyzer",
          "title": "Co Debug Analyzer",
          "icon": "$(debug-alt)"
        }
      ]
    },
    "views": {
      "coDebugAnalyzer": [
        {
          "id": "quickDebugAIView",
          "name": "ðŸ¤– Quick Debug AI",
          "when": "true",
          "icon": "$(robot)"
        }
      ]
    },
    "configuration": {
      "title": "Co Debug Context Analyzer",
      "properties": {
        "coDebugger.multiLanguage.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable multi-language debugging support"
        },
        "coDebugger.multiLanguage.autoDetection": {
          "type": "boolean",
          "default": true,
          "description": "Automatically detect programming language from debug session"
        },
        "coDebugger.languageSpecific.java.maxVariableDepth": {
          "type": "number",
          "default": 4,
          "description": "Java-specific maximum variable expansion depth"
        },
        "coDebugger.languageSpecific.java.memoryLimitMB": {
          "type": "number",
          "default": 40,
          "description": "Java-specific memory limit for variable analysis"
        },
        "coDebugger.languageSpecific.cpp.maxVariableDepth": {
          "type": "number",
          "default": 5,
          "description": "C++-specific maximum variable expansion depth"
        },
        "coDebugger.languageSpecific.cpp.memoryLimitMB": {
          "type": "number",
          "default": 60,
          "description": "C++-specific memory limit for variable analysis"
        },
        "coDebugger.languageSpecific.cpp.analyzeSTLContainers": {
          "type": "boolean",
          "default": true,
          "description": "Enable detailed STL container analysis in C++"
        },
        "coDebugger.businessLogic.enableDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic business logic detection"
        },
        "coDebugger.businessLogic.applicationPatterns": {
          "type": "array",
          "default": [
            "Handler)",
            "Controller)",
            "Service)",
            "UseCase)",
            "Repository)",
            "Manager)",
            ".Get",
            ".Post",
            ".Put",
            ".Delete",
            ".Create",
            ".Update",
            ".Process"
          ],
          "description": "Patterns to identify application code"
        },
        "coDebugger.variableAnalysis.maxVariableValueLength": {
          "type": "number",
          "default": 500,
          "description": "Maximum length for variable values"
        },
        "coDebugger.variableAnalysis.enableTypeInference": {
          "type": "boolean",
          "default": true,
          "description": "Enable smart type inference"
        },
        "coDebugger.llm.provider": {
          "type": "string",
          "enum": [
            "openai",
            "anthropic",
            "azure",
            "custom"
          ],
          "default": "openai",
          "description": "AI provider for code analysis",
          "enumDescriptions": [
            "OpenAI GPT models",
            "Anthropic Claude models",
            "Azure OpenAI Service",
            "Custom endpoint"
          ]
        },
        "coDebugger.llm.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API key for AI analysis",
          "format": "password"
        },
        "coDebugger.llm.anthropicApiKey": {
          "type": "string",
          "default": "",
          "description": "Anthropic API key for AI analysis",
          "format": "password"
        },
        "coDebugger.llm.azureApiKey": {
          "type": "string",
          "default": "",
          "description": "Azure OpenAI API key",
          "format": "password"
        },
        "coDebugger.llm.azureEndpoint": {
          "type": "string",
          "default": "",
          "description": "Azure OpenAI endpoint URL"
        },
        "coDebugger.llm.azureDeploymentName": {
          "type": "string",
          "default": "",
          "description": "Azure OpenAI deployment name"
        },
        "coDebugger.llm.customEndpoint": {
          "type": "string",
          "default": "",
          "description": "Custom API endpoint URL"
        },
        "coDebugger.llm.customApiKey": {
          "type": "string",
          "default": "",
          "description": "Custom API key",
          "format": "password"
        },
        "coDebugger.llm.model": {
          "type": "string",
          "default": "gpt-4",
          "description": "AI model to use for analysis"
        },
        "coDebugger.llm.temperature": {
          "type": "number",
          "default": 0.3,
          "minimum": 0,
          "maximum": 2,
          "description": "AI response creativity (0-2)"
        },
        "coDebugger.llm.maxTokens": {
          "type": "number",
          "default": 4000,
          "minimum": 100,
          "maximum": 8000,
          "description": "Maximum tokens in AI response"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack --config webpack.config.js",
    "watch": "webpack --watch --config webpack.config.js",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test": "echo \"No tests specified\" && exit 0",
    "lint": "echo \"No linting configured\" && exit 0"
  },
  "dependencies": {
    "node-fetch": "^2.6.7"
  },
  "devDependencies": {
    "@types/node": "^16.18.126",
    "@types/node-fetch": "^2.6.3",
    "@types/vscode": "^1.60.0",
    "ts-loader": "^9.3.0",
    "typescript": "^4.9.5",
    "webpack": "^5.73.0",
    "webpack-cli": "^4.10.0"
  }
}